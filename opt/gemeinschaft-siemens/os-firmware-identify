#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
*                    Add-on Siemens provisioning
* 
* $Revision: 236 $
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* DIESE SKRIPTE STEHEN ZUM TEIL UNTER EINER GEHEIMHALTUNGSVEREIN-
* BARUNG MIT DER SIEMENS ENTERPRISE GmbH & Co KG UND WERDEN AUS-
* SCHLIESSLICH DEM LANDWIRTSCHAFLICHEN VERSICHERUNGSVEREIN MÜNSTER
* (LVM) ZUR VERFÜGUNG GESTELLT! DIESE ANPASSUNGEN STEHEN NICHT
* UNTER DER GNU GPL!
* Inwieweit die Geheimhaltungsvereinbarung tatsächlich zutrifft
* bleibt noch zu klären, da die Parameter teilweise öffentlich
* dokumentiert sind und sich die Übertragungen ohne geheimes
* Wissen im Klartext mitlesen lassen.
\*******************************************************************/


if ($argc < 2) {
	echo "Usage: ", baseName(@$argv[0]), " filename\n";
	exit(1);
}
$file = @$argv[1];
if (! file_exists($file)) {
	echo "File \"$file\" not found.\n";
	exit(1);
}
if (is_dir($file)) {
	echo "\"$file\" is a directory.\n";
	exit(1);
}

# like substr() but make sure $str is cut if too long
function sub_str_pad( $str, $len, $pad=' ', $type=STR_PAD_RIGHT )
{
	switch ($type) {
		case STR_PAD_RIGHT: $str = subStr($str,0,$len); break;
		case STR_PAD_LEFT : $str = subStr($str, -$len); break;
		case STR_PAD_BOTH : $str = subStr($str,0,$len); break; //FIXME
	}
	return str_pad( $str, $len, $pad, $type );
}

echo "\n";
$score = 0;

$good = "                                               ---> GOOD\n";
$bad  = "                                               ---> BAD\n";

echo "  FILE TYPE:\n";
$out = array(); $err = 0;
@exec('file -L -b -k '. escapeShellArg($file), $out, $err);
if ($err==0) {
	$tmp = trim(implode(', ', $out));
	echo '    ', $tmp, "\n";
	if (preg_match('/MIPS|ECOFF/i', $tmp)) {
		$score += 10;
		echo $good;
	} elseif (preg_match('/Tower/i', $tmp)) {
		$score += 10;
		echo $good;
	} elseif (preg_match('/data/i', $tmp)) {
		$score += 5;
		echo $good;
	} else
		echo $bad;
} else {
	echo "  error\n";
}
echo "\n";


echo "  MODEL IDENTIFIERS:\n";
$out = array(); $err = 0;
@exec('export LC_ALL=C; grep -a -o -E -i '
	. escapeShellArg( 'OpenStage([0-9]{2,3})' )
	.' '. escapeShellArg($file), $out, $err);
$openstage_model = null;
if ($err==0) {
	foreach ($out as $tmp) {
		echo '    ', trim($tmp), "\n";
		if (! $openstage_model) {
			if (preg_match('/OpenStage([0-9]{2,3})/i', $tmp, $m)) {
				$openstage_model = (int)$m[1];
			}
		}
	}
	if (count($out) > 0) {
		$score += 10;
		echo $good;
	} else {
		echo "    - none -\n";
		echo $bad;
	}
} else {
	if ($err==1) {
		echo "    - none -\n";
		echo $bad;
	} else {
		echo "  error\n";
	}
}
echo "\n";


echo "  VERSION IDENTIFIERS:\n";
$out = array(); $err = 0;
@exec('export LC_ALL=C; grep -a -o -E -i '
	. escapeShellArg( 'V[0-9]{1,2} R[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,4}' )
	.' '. escapeShellArg($file), $out, $err);
$vers = null;
if ($err==0) {
	foreach ($out as $tmp) {
		echo '    ', trim($tmp), "\n";
	}
	if (count($out) > 0) {
		if (preg_match('/V([0-9]{1,2})\s*R([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,4})/i', $out[0], $m)) {
			$score += 10;
			$vers =
				sub_str_pad($m[1], 2, '0', STR_PAD_LEFT) .'.'.
				sub_str_pad($m[2], 2, '0', STR_PAD_LEFT) .'.'.
				sub_str_pad($m[3], 2, '0', STR_PAD_LEFT) .'.'.
				sub_str_pad($m[4], 3, '0', STR_PAD_LEFT) ;
			echo "    -> Version: ", $vers, "\n";
			if (subStr($vers, 0, 2) == '00')
				echo "    -> development version?\n";
		}
		echo $good;
	} else {
		echo "    - none -\n";
		echo $bad;
	}
} else {
	if ($err==1) {
		echo "    - none -\n";
		echo $bad;
	} else {
		echo "  error\n";
	}
}
echo "\n";


echo "  OTHER MAGIC:\n";
$out = array(); $err = 0;
@exec('export LC_ALL=C; grep -a -o -E -i '
	. escapeShellArg( 'OpenStage( Hi)?|Siemens( SIP)?|uImage(\-([0-9]{1,2})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,4}))?' )
	.' '. escapeShellArg($file), $out, $err);
$vers2 = null;
if ($err==0) {
	$local_score = 0;
	$out = array_flip(array_flip($out));
	sort($out);
	echo '    ', implode(', ', $out), "\n";
	foreach ($out as $tmp) {
		//echo '    ', trim($tmp), "\n";
		/*
		switch (strToLower(subStr(trim($tmp),0,4))) {
			case 'open': $local_score += 2; break;
			case 'siem': $local_score += 3; break;
			case 'uima': $local_score += 3; break;
		}
		*/
		if     (strToLower($tmp)=='openstage'   ) $local_score += 1;
		elseif (strToLower($tmp)=='openstage hi') $local_score += 1;
		elseif (strToLower($tmp)=='siemens'     ) $local_score += 1;
		elseif (strToLower($tmp)=='siemens sip' ) $local_score += 2;
		elseif (strToLower($tmp)=='uimage'      ) $local_score += 1;
		elseif (strToLower(subStr($tmp,0,7))=='uimage-') {
			$local_score += 6;
			if (preg_match('/([0-9]{1,2})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,4})/i', $tmp, $m)) {
				$vers2 =
					sub_str_pad($m[1], 2, '0', STR_PAD_LEFT) .'.'.
					sub_str_pad($m[2], 2, '0', STR_PAD_LEFT) .'.'.
					sub_str_pad($m[3], 2, '0', STR_PAD_LEFT) .'.'.
					sub_str_pad($m[4], 3, '0', STR_PAD_LEFT) ;
				echo "    -> Version: ", $vers2, "\n";
				if ($vers !== null && $vers2 === $vers) {
					# extra score for matching versions
					$score += 10;
				}
			}
		}
	}
	$score += ($local_score >= 9 ? 10 : $local_score);
	if (count($out) > 0) {
		echo $good;
	} else {
		echo "    - none -\n";
		echo $bad;
	}
} else {
	if ($err==1) {
		echo "    - none -\n";
		echo $bad;
	} else {
		echo "  error\n";
	}
}
echo "\n";


echo "  SCORE:\n";
$score /= 5;  # 5 tests
$score = round($score*10);  # 10 points per test * 10 => %
if ($score > 100) $score = 100;
echo '    ', $score, " %\n";
echo ($score > 80) ? $good : $bad;
echo "\n";


if ($vers2 !== $vers) {
	echo "  Caution: The software versions in this file do not match:\n";
	echo '  ', $vers, " != ", $vers2, "\n";
	echo "\n";
}
if ($score > 70 && $vers !== null) {
	if (subStr($vers,0,2) === '00') {
		echo "  Note: This firmware seems to be a development version.\n";
		echo "  You might need to choose a directory name somewhat higher.\n";
		if (subStr($vers, 3, 2) == '07') {  # 00.07.xx.xxx
			$effective_vers = '01.03.00.'. subStr($vers,9,3);
		} else {
			$effective_vers = '01'. subStr($vers,2);
		}
		echo "  (Suggestion: ", $effective_vers ,")\n";
		echo "\n";
	} else {
		$effective_vers = $vers;
	}
	echo "  Move the file to firmware/os", ($openstage_model ? $openstage_model : 'XX') ,"/", $effective_vers, "/opera_bind.img\n";
	echo "  for deployment.\n";
	echo "\n";
}

?>