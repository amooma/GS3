#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file

require_once( dirName(__FILE__) .'/../inc/conf.php' );
include_once( GS_DIR .'lib/getopt.php' );
include_once( GS_DIR .'inc/gs-lib.php' );
include_once( GS_DIR .'inc/mb_str_pad.php' );


/***********************************************************
*    the shell parameters
***********************************************************/
$usage = 'Usage: '. baseName(__FILE__);

$opts = @getOptsNoMultiples( '',
	array(
	),
	$usage
);


/***********************************************************
*    call the function
***********************************************************/
$queues = @ gs_queues_get();
if (isGsError( $queues )) gs_script_error( $queues->getMsg() );
if (! is_array($queues))  gs_script_error();

$fields = array(
	'id'          => 2,
	'name'        => 4,
	'title'       => 4,
	'maxlen'      => 2,
	'num_members' => 2
);
$fieldsAbbr = array(
	'id'          => 'id',
	'name'        => 'ext',
	'title'       => 'title',
	'maxlen'      => 'maxlen',
	'num_members' => '#members'
);
$fieldsPad = array(
	'id'          => STR_PAD_LEFT,
	'name'        => STR_PAD_RIGHT,
	'title'       => STR_PAD_RIGHT,
	'maxlen'      => STR_PAD_LEFT,
	'num_members' => STR_PAD_LEFT
);

foreach ($fields as $field => $length) {
	if (strLen($fieldsAbbr[$field]) > $length)
		$fields[$field] = strLen($fieldsAbbr[$field]);
}
foreach ($queues as $ignore => $queue) {
	foreach ($fields as $field => $length) {
		//$queue[$field] = str_replace( '"', '\\"', $queue[$field] );
		if (mb_strLen($queue[$field]) > $length)
			$fields[$field] = mb_strLen($queue[$field]);
	}
}

$header = '| ';
foreach ($fields as $field => $length) {
	$header.= str_pad( $fieldsAbbr[$field], $length, ' ' ) .' | ';
}
$sep = str_repeat( '-', strLen($header)-1 );

echo $sep, "\n";
echo $header, "\n";
echo $sep, "\n";
foreach ($queues as $ignore => $queue) {
	echo '| ';
	foreach ($fields as $field => $length) {
		echo mb_str_pad( $queue[$field], $length, ' ', $fieldsPad[$field] ), ' | ';
	}
	echo "\n";
}
echo $sep, "\n";

?>