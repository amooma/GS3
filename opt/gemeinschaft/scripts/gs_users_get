#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file

require_once( dirName(__FILE__) .'/../inc/conf.php' );
include_once( GS_DIR .'lib/getopt.php' );
include_once( GS_DIR .'inc/gs-lib.php' );
include_once( GS_DIR .'inc/mb_str_pad.php' );


/***********************************************************
*    the shell parameters
***********************************************************/
$usage = 'Usage: '. baseName(__FILE__);

$opts = @getOptsNoMultiples( '',
	array(
	),
	$usage
);


/***********************************************************
*    call the function
***********************************************************/
$users = @ gs_users_get();
if (isGsError( $users )) gs_script_error( $users->getMsg() );
if (! $users)            gs_script_error();

$fields = array(
	'id'         => 2,
	'user'       => 6,
	'ext'        => 4,
	'pin'        => 3,
	'lastname'   => 5,
	'firstname'  => 5,
	'honorific'  => 1,
	'email'      => 1,
	'callerid'   => 10,
	//'mailbox'    => 1,
	'host'       => 7
);
$fieldsAbbr = array(
	'id'         => 'id',
	'user'       => 'user',
	'ext'        => 'ext',
	'pin'        => 'pin',
	'lastname'   => 'ln',
	'firstname'  => 'fn',
	'honorific'  => 'hfc',
	'email'      => 'email',
	'callerid'   => 'cid',
	//'mailbox'    => 'vm',
	'host'       => 'host'
);
$fieldsPad = array(
	'id'         => STR_PAD_LEFT,
	'user'       => STR_PAD_RIGHT,
	'ext'        => STR_PAD_RIGHT,
	'pin'        => STR_PAD_RIGHT,
	'lastname'   => STR_PAD_RIGHT,
	'firstname'  => STR_PAD_RIGHT,
	'honorific'  => STR_PAD_RIGHT,
	'email'      => STR_PAD_RIGHT,
	'callerid'   => STR_PAD_RIGHT,
	//'mailbox'    => STR_PAD_RIGHT,
	'host'       => STR_PAD_RIGHT
);

foreach ($fields as $field => $length) {
	if (strLen($fieldsAbbr[$field]) > $length)
		$fields[$field] = strLen($fieldsAbbr[$field]);
}
foreach ($users as $ignore => $user) {
	foreach ($fields as $field => $length) {
		//$user[$field] = str_replace( '"', '\\"', $user[$field] );
		if (mb_strLen($user[$field]) > $length)
			$fields[$field] = mb_strLen($user[$field]);
	}
}

$header = '| ';
foreach ($fields as $field => $length) {
	$header.= str_pad( $fieldsAbbr[$field], $length, ' ' ) .' | ';
}
$sep = str_repeat( '-', strLen($header)-1 );

echo $sep, "\n";
echo $header, "\n";
echo $sep, "\n";
foreach ($users as $ignore => $user) {
	echo '| ';
	foreach ($fields as $field => $length) {
		echo mb_str_pad( $user[$field], $length, ' ', $fieldsPad[$field] ), ' | ';
	}
	echo "\n";
}
echo $sep, "\n";

?>