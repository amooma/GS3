#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file

require_once( dirName(__FILE__) .'/../inc/conf.php' );
include_once( GS_DIR .'lib/getopt.php' );
include_once( GS_DIR .'inc/gs-lib.php' );
include_once( GS_DIR .'inc/gs-fns/gs_user_prov_params_get.php' );
include_once( GS_DIR .'inc/mb_str_pad.php' );


/***********************************************************
*    the shell parameters
***********************************************************/
$usage = 'Usage: '. baseName(__FILE__) .' (--user=<user> [--phone-type=<phone-type>] | --phone-type=<phone-type>)';

$opts = @getOptsNoMultiples( '',
	array(
		'user=',
		'phone-type='
	),
	$usage
);
if (! isSet($opts['user'])
&&  ! isSet($opts['phone-type'])
) {
	gs_script_invalid_usage( $usage );
}

if (! array_key_exists('user', $opts))
	$opts['user'] = null;
if (! array_key_exists('phone-type', $opts))
	$opts['phone-type'] = null;


/***********************************************************
*    call the function
***********************************************************/
$ret = @ gs_user_prov_params_get( $opts['user'], $opts['phone-type'] );
if (isGsError($ret))  gs_script_error( $ret->getMsg() );
if (! is_array($ret)) gs_script_error();

$fields = array(
	'user'       => 2,
	'phone_type' => 3,
	'param'      => 1,
	'index'      => 1,
	'value'      => 1,
);
$fieldsAbbr = array(
	'user'       => 'user',
	'phone_type' => 'phone-type',
	'param'      => 'param',
	'index'      => 'idx',
	'value'      => 'value'
);

if (gs_stdout_is_console()) {
	
	$fieldsPad = array(
		'user'       => STR_PAD_RIGHT,
		'phone_type' => STR_PAD_RIGHT,
		'param'      => STR_PAD_RIGHT,
		'index'      => STR_PAD_LEFT,
		'value'      => STR_PAD_RIGHT
	);
	
	foreach ($fields as $field => $length) {
		if (strLen($fieldsAbbr[$field]) > $length)
			$fields[$field] = strLen($fieldsAbbr[$field]);
	}
	foreach ($ret as $ignore => $param_def) {
		foreach ($fields as $field => $length) {
			//$param_def[$field] = str_replace( '"', '\\"', $param_def[$field] );
			if (mb_strLen($param_def[$field]) > $length)
				$fields[$field] = mb_strLen($param_def[$field]);
		}
	}
	
	$header = '| ';
	foreach ($fields as $field => $length) {
		$header.= str_pad( $fieldsAbbr[$field], $length, ' ' ) .' | ';
	}
	$sep = str_repeat( '-', strLen($header)-1 );
	
	echo $sep, "\n";
	echo $header, "\n";
	echo $sep, "\n";
	foreach ($ret as $ignore => $param_def) {
		echo '| ';
		foreach ($fields as $field => $length) {
			echo mb_str_pad( $param_def[$field], $length, ' ', $fieldsPad[$field] ), ' | ';
		}
		echo "\n";
	}
	echo $sep, "\n";

}
else {
	
	echo '# ';
	foreach ($fields as $field => $length) {
		echo gs_add_c_slashes( $fieldsAbbr[$field] ) ,"\t";
	}
	echo "\n";
	
	foreach ($ret as $ignore => $param_def) {
		foreach ($fields as $field => $length) {
			echo gs_add_c_slashes( $param_def[$field] ) ,"\t";
		}
		echo "\n";
	}
	
}

?>