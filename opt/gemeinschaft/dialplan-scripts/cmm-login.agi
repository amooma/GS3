#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file
require_once( dirName(__FILE__) .'/../inc/conf.php' );
require_once( GS_DIR .'inc/log.php' );
require_once( GS_DIR .'inc/agi-fns.php' );

ini_set('implicit_flush', 1);
ob_implicit_flush(1);


$new_ext         =      trim(@$argv[1]);
$pass            =      trim(@$argv[2]);
$old_uid         = (int)trim(@$argv[3]);
$is_from_gateway =      trim(@$argv[4]);
$caller_ext      =      trim(@$argv[5]);

if ($is_from_gateway == '1') {
	if (! gs_get_conf('GS_BOI_ENABLED')) {
		gs_log( GS_LOG_NOTICE, "Mobility: User from gateway tries to log in but BOI is not enabled" );
		echo 'HANGUP' ."\n";
		die();
	}
}

if (! $new_ext) {
	gs_log( GS_LOG_NOTICE, "Mobility: No extension specified" );
	gs_agi_set_variable( 'ret', 'unknown' );
	//fFlush(STDOUT); // <- do not use. not defined in php-cgi!
	die();
}
if (! $pass) {
	gs_log( GS_LOG_NOTICE, "Mobility: Empty PIN number" );
	gs_agi_set_variable( 'ret', 'badpass' );
	//fFlush(STDOUT); // <- do not use. not defined in php-cgi!
	die();
}

include_once( GS_DIR .'inc/db_connect.php' );


$db = gs_db_master_connect();
if (! $db) {
	gs_log( GS_LOG_NOTICE, "Mobility: DB connection failed" );
	echo 'HANGUP' ."\n";
	die();
}

if ($old_uid < 1) {
	$old_uid = (int)$db->executeGetOne(
		'SELECT `_user_id` FROM `ast_sipfriends` WHERE `name`=\''. $db->escape($caller_ext) .'\'' );
	if ($old_uid < 1) {
		gs_log( GS_LOG_NOTICE, "Mobility: Neither old user ID nor caller ID specified" );
		gs_agi_set_variable( 'ret', 'error' );
		die();
	}
	gs_agi_set_variable( 'user_name', $caller_ext );
}

$new_uid = (int)$db->executeGetOne( 'SELECT `_user_id` FROM `ast_sipfriends` WHERE `name`=\''. $db->escape($new_ext) .'\'' );
if ($new_uid < 1) {
	# unknown user
	gs_log( GS_LOG_NOTICE, "Mobility: Unknown extension $new_ext" );
	gs_agi_set_variable( 'ret', 'unknown' );
	//fFlush(STDOUT); // <- do not use. not defined in php-cgi!
	die();
}
$pin = $db->executeGetOne( 'SELECT `pin` FROM `users` WHERE `id`='. $new_uid );
if (trim($pin)=='') {
	# db error, unknown user
	gs_agi_set_variable( 'ret', 'unknown' );
	//fFlush(STDOUT); // <- do not use. not defined in php-cgi!
	die();
}
if ((string)$pin != (string)$pass) {
	# wrong password
	gs_log( GS_LOG_NOTICE, "Mobility: Login attempt for ext. $new_ext - Wrong PIN number" );
	gs_agi_set_variable( 'ret', 'badpass' );
	//fFlush(STDOUT); // <- do not use. not defined in php-cgi!
	die();
}


# get id of the phone
#
$phone_id = (int)$db->executeGetOne( 'SELECT `id` FROM `phones` WHERE `user_id`='. $old_uid .' LIMIT 1' );
if ($phone_id < 1) {
	gs_log( GS_LOG_WARNING, "Mobility: Login attempt for ext. $new_ext - Could not find phone of last user ID $old_uid" );
	
	# try to find the phone by the corresponding nobody index
	$nobody_index = (int)$db->executeGetOne( 'SELECT `nobody_index` FROM `users` WHERE `id`='. $old_uid );
	if ($nobody_index > 0) {
		$phone_id = (int)$db->executeGetOne( 'SELECT `id` FROM `phones` WHERE `nobody_index`='. $nobody_index .' LIMIT 1' );
	}
	if ($phone_id < 1) {
		gs_log( GS_LOG_WARNING, "Mobility: Login attempt for ext. $new_ext - Could not find phone of last nobody_index $nobody_index" );
		gs_agi_set_variable( 'ret', 'error' );
		//fFlush(STDOUT); // <- do not use. not defined in php-cgi!
		die();
	}
}


# log out the old user, assign the default nobody
#
$rs = $db->execute( 'SELECT `id`, `mac_addr`, `nobody_index`, `user_id` FROM `phones` WHERE `user_id` IN ('. $old_uid .','. $new_uid .') AND `id`<>'. $phone_id );
while ($phone = $rs->fetchRow()) {
	$phone['nobody_index'] = (int)$phone['nobody_index'];
	$phone['user_id'     ] = (int)$phone['user_id'     ];
	if ($phone['nobody_index'] < 1) {
		gs_log( GS_LOG_WARNING, "Phone ". $phone['mac_addr'] ." does not have a default nobody user" );
		$nobody_user_id = null;
	} else {
		$nobody_user_id = (int)$db->executeGetOne(
			'SELECT `id` FROM `users` WHERE `nobody_index`='. $phone['nobody_index']
			);
		if ($nobody_user_id < 1) {
			gs_log( GS_LOG_WARNING, "Could not find user with nobody index ". $phone['nobody_index'] ." for phone ". $phone['mac_addr'] );
		}
	}
	gs_log( GS_LOG_DEBUG, "Mobility: Assigning nobody user with ID ". ($nobody_user_id > 0 ? $nobody_user_id : 'NULL') ." to phone ". $phone['mac_addr'] );
	$db->execute(
		'UPDATE `phones` SET '.
			'`user_id`='. ($nobody_user_id > 0 ? $nobody_user_id : 'NULL') .' '.
		'WHERE '.
			'`id`='. (int)$phone['id'] .' AND '.
			'`user_id` '. ($phone['user_id']>0 ? '='.$phone['user_id'] : 'IS NULL')
		);
}
//$db->execute( 'UPDATE `users` SET `current_ip`=NULL WHERE `id`='. $old_uid );


# log in the new user
#
$ok = $db->execute( 'UPDATE `phones` SET `user_id`='. $new_uid .' WHERE `id`='. $phone_id );
if (! $ok) {
	gs_log( GS_LOG_NOTICE, "Mobility: DB error" );
	gs_agi_set_variable( 'ret', 'error' );
	//fFlush(STDOUT); // <- do not use. not defined in php-cgi!
	die();
}

gs_agi_set_variable( 'ret', 'ok' );
//fFlush(STDOUT); // <- do not use. not defined in php-cgi!


# get old phone's IP addr.
#
$old_ip_addr = $db->executeGetOne( 'SELECT `current_ip` FROM `users` WHERE `id`='.$old_uid );
gs_log( GS_LOG_DEBUG, "Mobility: IP address found for old phone: $old_ip_addr" );
gs_agi_set_variable( 'old_phone_ip', $old_ip_addr );

# get new phone's IP addr.
#
$new_ip_addr = $db->executeGetOne('SELECT `current_ip` FROM `users` WHERE `id`='.$new_uid );
gs_log( GS_LOG_DEBUG, "Mobility: IP address found for new phone: $new_ip_addr");
gs_agi_set_variable( 'new_phone_ip', $new_ip_addr );


?>