#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file
require_once( dirName(__FILE__) .'/../inc/conf.php' );
require_once( GS_DIR .'inc/agi-fns.php' );

ini_set('implicit_flush', 1);
ob_implicit_flush(1);


$uname  = trim(@$argv[1]);

if (! $uname) gs_agi_err( 'Invalid extension' );
if (! preg_match('/^\d+$/', $uname)) {  // is not just digits
	gs_agi_err( 'Invalid extension' );
}


include_once( GS_DIR .'inc/db_connect.php' );


$db = gs_db_slave_connect();

# get user id:
$uid = (int)$db->executeGetOne( 'SELECT `_user_id` FROM `ast_sipfriends` WHERE `name`=\''. $db->escape($uname) .'\'' );
if ($uid < 1) gs_agi_err( 'User not found' );



$forwards = array(
	'internal' => array(
		'always'  => array( 'number'=>'' ),
		'busy'    => array( 'number'=>'' ),
		'offline' => array( 'number'=>'' ),
		'unavail' => array( 'number'=>'', 'timeout'=>15 )
	),
	'external' => array(
		'always'  => array( 'number'=>'' ),
		'busy'    => array( 'number'=>'' ),
		'offline' => array( 'number'=>'' ),
		'unavail' => array( 'number'=>'', 'timeout'=>15 )
	)
);

$rs = $db->execute( 'SELECT `source`, `case`, `timeout`, `number_std`, `number_var`, `number_vml`, `active` FROM `callforwards` WHERE `user_id`='. $uid );
while ($r = $rs->fetchRow()) {
	$number_std = trim( $r['number_std'] );
	$number_var = trim( $r['number_var'] );
	$number_vml = trim( $r['number_vml'] );
	$number = '';
	if     ($r['active']==='std' && $number_std != '')
		$number = $number_std;
	elseif ($r['active']==='var' && $number_var != '')
		$number = $number_var;
	elseif ($r['active']==='vml' && $number_vml != '')
		$number = $number_vml;
	$forwards[$r['source']][$r['case']]['number'] = $number;
	if ($r['case']==='unavail' && $number != '')
		$forwards[$r['source']][$r['case']]['timeout'] = $r['timeout'];
}


foreach ($forwards as $source => $arr) {
	foreach ($arr as $case => $fw) {
		//if ($fw['number'] != '') {
			gs_agi_set_variable( 'fw_'.$source.'_'.$case, $fw['number'] );
		//}
	}
}

if ($forwards['internal']['unavail']['number'] != '') {
	gs_agi_set_variable( 'fw_internal_unavail_timeout', $forwards['internal']['unavail']['timeout'] );
} else {
	gs_agi_set_variable( 'fw_internal_unavail_timeout', '' );
}

if ($forwards['external']['unavail']['number'] != '') {
	gs_agi_set_variable( 'fw_external_unavail_timeout', $forwards['external']['unavail']['timeout'] );
} else {
	gs_agi_set_variable( 'fw_external_unavail_timeout', '' );
}

$msgs = array(
	'internal' => '',
	'external' => ''
);
foreach ($msgs as $src => $ignore) {
	$fname = GS_DIR .'vm-rec/'. $uname .'-'. $src;
	if (file_exists( $fname .'.alaw' ))
		$msgs[$src] = $fname;
}
foreach ($msgs as $src => $file) {
	gs_agi_set_variable( 'vm_announce_'.$src, $file );
}



?>