#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file
require_once( dirName(__FILE__) .'/../inc/conf.php' );
require_once( GS_DIR .'inc/agi-fns.php' );

ini_set('implicit_flush', 1);
ob_implicit_flush(1);


$queue_ext  = trim(@$argv[1]);

if (! preg_match('/^\d+$/', $queue_ext)) {  // is not just digits
	gs_agi_err( 'Invalid queue extension' );
}


include_once( GS_DIR .'inc/db_connect.php' );


$db = gs_db_slave_connect();

# get queue info:
$rs = $db->execute( 'SELECT `_id`, `musicclass`, `_title` FROM `ast_queues` WHERE `name`=\''. $db->escape($queue_ext) .'\'' );
$queue = $rs->getRow();
if (! $queue) gs_agi_err( 'Queue not found' );
if ((int)$queue['_id'] < 1) gs_agi_err( 'Queue not found' );


# get call forwards
#

$forwards = array(
	'internal'=> array(
		'always'  => array( 'number'=>'', 'file'=>'' ),
		'full'    => array( 'number'=>'', 'file'=>'' ),
		'empty'   => array( 'number'=>'', 'file'=>'' ),
		'timeout' => array( 'number'=>'', 'file'=>'', 'timeout'=>15 )
	),
	'external'=> array(
		'always'  => array( 'number'=>'', 'file'=>'' ),
		'full'    => array( 'number'=>'', 'file'=>'' ),
		'empty'   => array( 'number'=>'', 'file'=>'' ),
		'timeout' => array( 'number'=>'', 'file'=>'', 'timeout'=>15 )
	)
);

$rs = $db->execute( 'SELECT `source`, `case`, `timeout`, `number_std`, `number_var`, `number_vml`, `vm_rec_id`, `active` FROM `queue_callforwards` WHERE `queue_id`='. (int)$queue['_id'] );
while ($r = $rs->fetchRow()) {
	$number_std = trim( $r['number_std'] );
	$number_var = trim( $r['number_var'] );
	$number_vml = trim( $r['number_vml'] );

	if ($r['active']==='trl') { //make the timerule-magic before anything else, to manipulate data...
		$t = time();
		$wd = strToLower(subStr(date('D', $t),0,2));
		$hm = date('H:i', $t);
		$query = 'SELECT `target` FROM `queue_cf_timerules` WHERE `d_'.$wd.'`=1 AND `h_from`<=\''.$hm.'\' AND `h_to`>\''.$hm.'\' AND `_queue_id`='.(int)$queue['_id']." ORDER BY `ord`";
		$target = $db->executeGetOne($query );
		if (substr($target,0,4) == 'vmln') {
			//define number (get number_vml and say that only the message is played, this is be done with the vm*<exten>)
			$tmpnumber= preg_replace('/[^0-9]/S', '', $number_vml );
			$number_vml = "vm*".$tmpnumber;
			//define vm_rec_id (is lige vmln-<id>)
			$r['vm_rec_id'] = preg_replace('/[^0-9]/S', '', $target );
			$r['active'] = 'vml';
		} else if (substr($target,0,3) == 'vml') {
			//define number (get number_vml and say that only the message is played, this is be done with the vm*<exten>)
			$tmpnumber= preg_replace('/[^0-9]/S', '', $number_vml );
			$number_vml = "vm".$tmpnumber;
			//define vm_rec_id (is lige vmln-<id>)
			$r['vm_rec_id'] = preg_replace('/[^0-9]/S', '', $target );
			$r['active'] = 'vml';
		} else {
			$r['active'] = $target;
		}
	} 

	$number = '';
	$audiofile = '';
	if     ($r['active']==='std' && $number_std != '') {
		$number = $number_std;
	}
	elseif ($r['active']==='var' && $number_var != '') {
		$number = $number_var;
	}
	elseif ($r['active']==='vml' && $number_vml != '') {
		$number = $number_vml;
		$audiofile = $db->executeGetOne( 'SELECT `vm_rec_file` FROM `queue_vm_rec_messages` WHERE `id`='. (int)$r['vm_rec_id'] );
	}
	elseif ($r['active']==='par') {
		$numbers = $db->execute( 'SELECT `number` FROM `queue_cf_parallelcall` WHERE `_queue_id`='. (int)$queue['_id'] );
		$cnt = 0;
		while ($num = $numbers->fetchRow()) {
			if($num['number'] != '') {
				if($cnt!=0)
					$number = $number.'/n&Local/';
				$number = $number.$num['number'];
				++$cnt;
			}
		}
	}
	$forwards[$r['source']][$r['case']]['number'] = $number;
	$forwards[$r['source']][$r['case']]['file'  ] = $audiofile;
	if ($r['case']==='timeout' && $number != '')
		$forwards[$r['source']][$r['case']]['timeout'] = $r['timeout'];
}

foreach ($forwards as $source => $arr) {
	foreach ($arr as $case => $fw) {
		//if ($fw['number'] != '') {
			gs_agi_set_variable( 'fw_'.$source.'_'.$case, $fw['number'] );
		//}
		//if ($fw['file'] != '') {
			gs_agi_set_variable( 'fw_file_'.$source.'_'.$case, '/opt/gemeinschaft/vm-rec/'.$fw['file'] );
		//}
	}
}
if ($forwards['internal']['timeout']['number'] != '') {
	gs_agi_set_variable( 'fw_internal_timeout_timeout', $forwards['internal']['timeout']['timeout'] );
}
if ($forwards['external']['timeout']['number'] != '') {
	gs_agi_set_variable( 'fw_external_timeout_timeout', $forwards['external']['timeout']['timeout'] );
}


# ring instead of MOH?
#
$ring_instead_of_moh = (trim($queue['musicclass']) == '');
gs_agi_set_variable( 'ring_instead_of_moh', ($ring_instead_of_moh ? 'r':'') );

# queue title (for caller ID display)
#
$displayname = rTrim(subStr( preg_replace('/  +/', ' ',
	preg_replace('/[^a-zA-Z0-9\\-_.,+\\(\\) ]/', '', trim($queue['_title']))),
	0, 15));
gs_agi_set_variable( 'queue_displayname', ( $displayname != '' ? $displayname : 'Q'.$queue_ext ) );


?>