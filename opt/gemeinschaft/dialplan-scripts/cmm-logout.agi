#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file
require_once( dirName(__FILE__) .'/../inc/conf.php' );
require_once( GS_DIR .'inc/log.php' );
require_once( GS_DIR .'inc/agi-fns.php' );
require_once( GS_DIR .'inc/quote_shell_arg.php' );

ini_set('implicit_flush', 1);
ob_implicit_flush(1);


$user_id  = (int)trim(@$argv[1]);
$is_from_gateway = (bool)trim(@$argv[2]);
if ($is_from_gateway) {
	if (! gs_get_conf('GS_BOI_ENABLED')) {
		gs_log( GS_LOG_NOTICE, "Mobility: User from gateway tries to log out but BOI is not enabled" );
		gs_agi_err( "Mobility: User from gateway tries to log out but BOI is not enabled" );
		exit();
	}
} else {
	if ($user_id < 1) {
		gs_log( GS_LOG_NOTICE, "Mobility: User ID not specified" );
		gs_agi_err( "Mobility: User ID not specified" );
		exit();
	}
}
$caller_id  = preg_replace('/[^0-9]/', '', @$argv[3]);
$caller_ext = $caller_id;

include_once( GS_DIR .'inc/db_connect.php' );

$db = gs_db_master_connect();
if (! $db) {
	gs_log( GS_LOG_NOTICE, "Mobility: DB connection failed" );
	gs_agi_err( 'DB error' );
	exit();
}

if ($user_id < 1 && $is_from_gateway) { 
	# fall back to caller ID
	$user_id = (int)$db->executeGetOne(
		'SELECT `_user_id` FROM `ast_sipfriends` WHERE `name`=\''. $db->escape($caller_ext) .'\'' );
	if ($user_id < 1) {
		gs_log( GS_LOG_NOTICE, "Mobility: User ID not specified and no user found for caller ID $caller_ext" );
		gs_agi_err( "Mobility: User ID not specified and no user found for caller ID $caller_ext" );
		exit();
	}
}

$rs = $db->execute( 'SELECT `id`, `mac_addr`, `nobody_index` FROM `phones` WHERE `user_id`='. $user_id );
while ($phone = $rs->fetchRow()) {
	
	# assign the default nobody
	#
	$phone['nobody_index'] = (int)$phone['nobody_index'];
	if ($phone['nobody_index'] < 1) {
		gs_log( GS_LOG_WARNING, "Phone ". $phone['mac_addr'] ." does not have a default nobody user" );
		$new_user_id = null;
	} else {
		$new_user_id = (int)$db->executeGetOne(
			'SELECT `id` FROM `users` WHERE `nobody_index`='. $phone['nobody_index']
			);
		if ($new_user_id < 1) {
			gs_log( GS_LOG_WARNING, "Could not find user with nobody index ". $phone['nobody_index'] ." for phone ". $phone['mac_addr'] );
		}
	}
	gs_log( GS_LOG_DEBUG, "Mobility: Assigning nobody user with ID ". ($new_user_id > 0 ? $new_user_id : 'NULL') ." to phone ". $phone['mac_addr'] );
	$db->execute( 'UPDATE `phones` SET `user_id`='. ($new_user_id > 0 ? $new_user_id : 'NULL') .' WHERE `id`='. (int)$phone['id'] .' AND `user_id`='. $user_id );
	
	//if ($new_user_id)
	//	$db->execute( 'UPDATE `users` SET `current_ip`=NULL WHERE `id`='. $new_user_id );
	
}

# log out of all queues
#
$user_ext = $db->executeGetOne( 'SELECT `name` FROM `ast_sipfriends` WHERE `_user_id`='. $user_id );
$user_ext = preg_replace('/[^0-9]/', '', $user_ext);
if ($user_ext != '') {
	ob_start();
	@exec( GS_DIR.'dialplan-scripts/fake-agi-env.php'
		. ' '. qsa(GS_DIR.'dialplan-scripts/queue-login-logout.agi') .' '. qsa($user_ext) .' 0 logoutall 1>>/dev/null 2>>/dev/null' );
	ob_end_clean();
}


# get old phone's IP addr.
#
$old_ip_addr = $db->executeGetOne( 'SELECT `current_ip` FROM `users` WHERE `id`='.$user_id );
gs_log( GS_LOG_DEBUG, "Mobility: IP address found for old phone: $old_ip_addr" );
gs_agi_set_variable( 'old_phone_ip', $old_ip_addr );


?>