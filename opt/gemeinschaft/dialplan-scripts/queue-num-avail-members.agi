#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file

ini_set('implicit_flush', 1);
ob_implicit_flush(1);


$queue_name = trim(@$argv[1]);

if (! preg_match('/^\d+$/', $queue_name))  // is not just digits
	die();

require_once( dirName(__FILE__) .'/../inc/conf.php' );
include_once( GS_DIR .'inc/db_connect.php' );
include_once( GS_DIR .'inc/queue-status.php' );


function _devstate2avail( $devstate )
{
	$states = array(
		AST_DEVICE_UNKNOWN     => true,  # avail
		AST_DEVICE_NOT_INUSE   => true,  # avail
		AST_DEVICE_INUSE       => false,
		AST_DEVICE_BUSY        => false,
		AST_DEVICE_INVALID     => false,
		AST_DEVICE_UNAVAILABLE => false,
		AST_DEVICE_RINGING     => false,
		AST_DEVICE_RINGINUSE   => false,
		AST_DEVICE_ONHOLD      => false
	);
	return array_key_exists($devstate, $states) ? $states[$devstate] : false;
}



$db = gs_db_slave_connect();

# get queue
#
$rs = $db->execute(
'SELECT
	`q`.`_id` `id`, `q`.`_host_id` `host_id`, `h`.`host`
FROM
	`ast_queues` `q` JOIN
	`hosts` `h` ON (`h`.`id`=`q`.`_host_id`)
WHERE `q`.`name`=\''. $db->escape($queue_name) .'\'' );
$queue = $rs->fetchRow();
if (! $queue) die();

# get queue stats from manager interface
#
$queue_stats = gs_queue_status( $queue['host'], $queue_name, true, false );
if (! is_array($queue_stats) || ! is_array($queue_stats['members']))
	die();

$num_members = count( $queue_stats['members'] );
echo "SET VARIABLE queue_num_members ", $num_members, "\n";

$num_avail = 0;
foreach ($queue_stats['members'] as $member) {
	if (_devstate2avail( @$member['devstate'] ))
		++$num_avail;
}
echo "SET VARIABLE queue_avail_members ", $num_avail, "\n";


?>