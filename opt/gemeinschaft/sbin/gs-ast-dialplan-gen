#!/usr/bin/php -q
<?php
/*******************************************************************\
*            Gemeinschaft - asterisk cluster gemeinschaft
* 
* $Revision$
* 
* Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
* http://www.amooma.de/
* Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
* Philipp Kempgen <philipp.kempgen@amooma.de>
* Peter Kozak <peter.kozak@amooma.de>
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
* 
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
* MA 02110-1301, USA.
\*******************************************************************/

define( 'GS_VALID', true );  /// this is a parent file
require_once( dirName(__FILE__) .'/../inc/conf.php' );
include_once( GS_DIR .'lib/getopt.php' );
//require_once( GS_DIR .'inc/remote-exec.php' );
require_once( GS_DIR .'inc/quote_shell_arg.php' );
//require_once( GS_DIR .'inc/find_executable.php' );
include_once( GS_DIR .'inc/log.php' );


$etc_asterisk = GS_DIR .'etc/asterisk/';
$gs_extensions_ael_filename = 'gs-extensions.ael';



$usage = 'Usage: '. baseName(__FILE__) .'';

$opts = @getOptsNoMultiples( '',
	array(
	),
	$usage
);

$only_dialplan = true;



function ael_file_realname( $file )
{
	global $etc_asterisk;
	return (@$file{0} === '/') ? $file : ($etc_asterisk . $file);
}

function ael_get_file_content( $file )
{
	if (! file_exists( $file )
	||  ! is_readable( $file )) {
		return false;
	}
	$content = @gs_file_get_contents( $file );
	return is_string($content) ? $content : false;
}

// returns false if needs another pass or true if done
function ael_eval_includes()
{
	global $extensions_ael;
	
	$pattern = '/^[ \t]*#([iI]nclude|[eE]xec)[ \t]+([^\n\r]*)/mS';
	if (preg_match( $pattern, $extensions_ael )) {
		$extensions_ael = preg_replace_callback( $pattern, 'ael_eval_callback', $extensions_ael );
		return false;
	}
	return true;
}

function ael_eval_callback( $m )
{
	$directive = strToLower($m[1]);
	$filename = ael_file_realname( trim( $m[2], '"\'<>`´' ) );
	gs_log( GS_LOG_DEBUG, "Loading #$directive $filename ..." );
	
	if ($directive === 'include') {
		
		$filename = ael_file_realname( $filename );
		//echo "    incl $filename\n";
		$content = ael_get_file_content( $filename );
		if (is_string($content)) {
			return $content;
		} else {
			if (! file_exists($filename))
				$reason_msg = 'file not found';
			elseif (! is_readable($filename))
				$reason_msg = 'file not readable';
			else
				$reason_msg = 'unknown error';
			
			echo "WARNING: Could not read included file \"$filename\" ($reason_msg)!\n";
			gs_log( GS_LOG_WARNING, "Could not read included file \"$filename\" ($reason_msg)" );
			return "// WARNING: Could not read included file \"$filename\" ($reason_msg)!";
		}
		
	} elseif ($directive === 'exec') {
		
		$filename = ael_file_realname( $filename );
		//echo "    exec $filename\n";
		$err=0; $out=array();
		@exec( escapeShellCmd($filename) .' 2>&1', $out, $err );
		if ($err === 0 && is_array($out)) {
			return implode("\n", $out);
		} else {
			if ($err === 127 || ! file_exists($filename))
				$reason_msg = 'file not found';
			elseif (! is_readable($filename))
				$reason_msg = 'file not readable';
			elseif (! is_executable($filename))
				$reason_msg = 'file not executable';
			else
				$reason_msg = 'exit '.$err.' - '. implode(' - ',$out);
			
			echo "WARNING: Could not exec included script \"$filename\" ($reason_msg)!\n";
			gs_log( GS_LOG_WARNING, "Could not exec included script \"$filename\" ($reason_msg)" );
			return "// WARNING: Could not exec included script \"$filename\" ($reason_msg)!";
		}
		
	}
}



echo "Generating extensions.ael ...\n";

$gs_extensions_ael_filename = ael_file_realname( $gs_extensions_ael_filename );
$extensions_ael = ael_get_file_content( $gs_extensions_ael_filename );
$pass = 0;
while (! ael_eval_includes()) { /*echo "  pass ".(++$pass).":\n";*/ }

$extensions_ael_filename = $etc_asterisk .'extensions.ael';



$f = @fOpen($extensions_ael_filename, 'wb');
if (! $f) {
	echo "ERROR: Could not open $extensions_ael_filename for writing!\n";
	exit(1);
}

$extensions_ael =
"//------------------------------------------------------------------//\n".
"// ". str_pad('WRITTEN BY /opt/gemeinschaft/sbin/'. baseName(__FILE__), 64, ' ', STR_PAD_BOTH) ." //\n".
"//------------------------------------------------------------------//\n".
"\n". $extensions_ael;
@fWrite($f, $extensions_ael, strLen($extensions_ael));
@fClose($f);
echo "extensions.ael written.\n";


?>