;--------------------------------------------------------------------
;            Gemeinschaft - asterisk cluster gemeinschaft
; 
; $Revision$
; 
; Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
; http://www.amooma.de/
; Stefan Wintermeyer <stefan.wintermeyer@amooma.de>
; Philipp Kempgen <philipp.kempgen@amooma.de>
; Peter Kozak <peter.kozak@amooma.de>
; 
; This program is free software; you can redistribute it and/or
; modify it under the terms of the GNU General Public License
; as published by the Free Software Foundation; either version 2
; of the License, or (at your option) any later version.
; 
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
; MA 02110-1301, USA.
;
; Most of the comments are from the sample file distributed with
; Asterisk.
;--------------------------------------------------------------------



; Useful CLI commands to check peers/users:
;   sip show peers              Show all SIP peers (including friends)
;   sip show users              Show all SIP users (including friends)
;   sip show registry           Show status of hosts we register with
;
;   sip debug                   Show all SIP messages


[general]

;callerid=asterisk               ; default "asterisk"
callerid=gemeinschaft
context=default                 ; Default context for incoming calls
;allowguest=no                  ; Allow or reject guest calls (default is yes)
allowguest=no
autocreatepeer=no
;allowoverlap=no                ; Disable overlap dialing support. (Default is yes)
;allowtransfer=no               ; Disable all transfers (unless enabled in peers or users)
                                ; Default is enabled
;realm=mydomain.tld             ; Realm for digest authentication
                                ; defaults to "asterisk". If you set a system name in
                                ; asterisk.conf, it defaults to that system name
                                ; Realms MUST be globally unique according to RFC 3261
                                ; Set this to your host name or domain name
realm=gemeinschaft.local
bindport=5060                   ; UDP Port to bind to (SIP standard port is 5060)
                                ; bindport is the local UDP port that Asterisk will listen on
;bindaddr=0.0.0.0                ; IP address to bind to (0.0.0.0 binds to all)
#exec /opt/gemeinschaft/etc/asterisk/bindaddr.conf.php sip

;
; Note that the TCP and TLS support for chan_sip is currently considered
; experimental.  Since it is new, all of the related configuration options are
; subject to change in any release.  If they are changed, the changes will
; be reflected in this sample configuration file, as well as in the UPGRADE.txt file.
;
tcpenable=no                    ; Enable server for incoming TCP connections (default is no)

;tlsenable=no                   ; Enable server for incoming TLS (secure) connections (default is no)
;tlsbindaddr=0.0.0.0            ; IP address for TLS server to bind to (0.0.0.0) binds to all interfaces)
                                ; Optionally add a port number, 192.168.1.1:5063 (default is port 5061)
                                ; Remember that the IP address must match the common name (hostname) in the
                                ; certificate, so you don't want to bind a TLS socket to multiple IP addresses.

;tlscertfile=asterisk.pem       ; Certificate file (*.pem only) to use for TLS connections 
                                ; default is to look for "asterisk.pem" in current directory

;tlscafile=</path/to/certificate>
;        If the server your connecting to uses a self signed certificate
;        you should have their certificate installed here so the code can 
;        verify the authenticity of their certificate.

;tlscadir=</path/to/ca/dir>
;        A directory full of CA certificates.  The files must be named with 
;        the CA subject name hash value. 
;        (see man SSL_CTX_load_verify_locations for more info) 

;tlsdontverifyserver=[yes|no]
;        If set to yes, don't verify the servers certificate when acting as 
;        a client.  If you don't have the server's CA certificate you can
;        set this and it will connect without requiring tlscafile to be set.
;        Default is no.

;tlscipher=<SSL cipher string>
;        A string specifying which SSL ciphers to use or not use
;        A list of valid SSL cipher strings can be found at: 
;                http://www.openssl.org/docs/apps/ciphers.html#CIPHER_STRINGS

srvlookup=yes                   ; Enable DNS SRV lookups on outbound calls
                                ; Note: Asterisk only uses the first host 
                                ; in SRV records
                                ; Disabling DNS SRV lookups disables the 
                                ; ability to place SIP calls based on domain 
                                ; names to some other SIP users on the Internet
                                
;domain=mydomain.tld            ; Set default domain for this host
                                ; If configured, Asterisk will only allow
                                ; INVITE and REFER to non-local domains
                                ; Use "sip show domains" to list local domains
;pedantic=yes                   ; Enable checking of tags in headers, 
                                ; international character conversions in URIs
                                ; and multiline formatted headers for strict
                                ; SIP compatibility (defaults to "no")
pedantic=yes

; See doc/README.tos for a description of these parameters.
tos_sip=cs3                     ; Sets TOS for SIP packets.
tos_audio=ef                    ; Sets TOS for RTP audio packets.
tos_video=af41                  ; Sets TOS for RTP video packets.

;cos_sip=3                      ; Sets 802.1p priority for SIP packets.
;cos_audio=5                    ; Sets 802.1p priority for RTP audio packets.
;cos_video=4                    ; Sets 802.1p priority for RTP video packets.
;cos_text=3                     ; Sets 802.1p priority for RTP text packets.

;maxexpiry=300                  ; Maximum allowed time of incoming registrations
                                ; and subscriptions (seconds)
;minexpiry=60                   ; Minimum length of registrations/subscriptions (default 60)
;defaultexpiry=120              ; Default length of incoming/outgoing registration
minexpiry=65
defaultexpiry=145
maxexpiry=185
;qualifyfreq=60                 ; Qualification: How often to check for the 
                                ; host to be up in seconds
                                ; Set to low value if you use low timeout for
                                ; NAT of UDP sessions
qualifyfreq=45

;notifymimetype=text/plain      ; Allow overriding of mime type in MWI NOTIFY
;buggymwi=no                    ; Cisco SIP firmware doesn't support the MWI RFC
                                ; fully. Enable this option to not get error messages
                                ; when sending MWI to phones with this bug.
vmexten=voicemail               ; dialplan extension to reach mailbox sets the 
                                ; Message-Account in the MWI notify message 
                                ; defaults to "asterisk"
;disallow=all                   ; First disallow all codecs
;allow=ulaw                     ; Allow codecs in order of preference
;allow=ilbc                     ; see doc/rtp-packetization for framing options
disallow=all
allow=alaw
;allow=ulaw
;allow=gsm

; This option specifies a preference for which music on hold class this channel
; should listen to when put on hold if the music class has not been set on the
; channel with Set(CHANNEL(musicclass)=whatever) in the dialplan, and the peer
; channel putting this one on hold did not suggest a music class.
;
; This option may be specified globally, or on a per-user or per-peer basis.
;
mohinterpret=default
;
; This option specifies which music on hold class to suggest to the peer channel
; when this channel places the peer on hold. It may be specified globally or on
; a per-user or per-peer basis.
;
;mohsuggest=default
;
;language=de                    ; Default language setting for all users/peers
                                ; This may also be set for individual users/peers
#exec "/opt/gemeinschaft/etc/asterisk/gs-lang.conf.php"

;relaxdtmf=yes                  ; Relax dtmf handling
relaxdtmf=yes
rfc2833compensate=yes
;trustrpid = no                 ; If Remote-Party-ID should be trusted
trustrpid=no
;sendrpid = yes                 ; If Remote-Party-ID should be sent
sendrpid=yes
;prematuremedia=no              ; Some ISDN links send empty media frames before 
                                ; the call is in ringing or progress state. The SIP 
                                ; channel will then send 183 indicating early media
                                ; which will be empty - thus users get no ring signal.
                                ; Setting this to "no" will stop any media before we have
                                ; call progress. Default is "no".
;progressinband=never           ; If we should generate in-band ringing always
                                ; use 'never' to never use in-band signalling, even in cases
                                ; where some buggy devices might not render it
                                ; Valid values: yes, no, never Default: never
progressinband=no
;useragent=Asterisk PBX         ; Allows you to change the user agent string
useragent=Asterisk Gemeinschaft
;sdpsession=Asterisk PBX        ; Allows you to change the SDP session name string, (s=)
sdpsession=Asterisk Gemeinschaft
;sdpowner=root                  ; Allows you to change the username field in the SDP owner string, (o=)
                                ; This field MUST NOT contain spaces
;promiscredir = no              ; If yes, allows 302 or REDIR to non-local SIP address
                                ; Note that promiscredir when redirects are made to the
                                ; local system will cause loops since Asterisk is incapable
                                ; of performing a "hairpin" call.
;usereqphone = yes              ; If yes, ";user=phone" is added to uri that contains
                                ; a valid phone number
usereqphone = no
;dtmfmode = rfc2833             ; Set default dtmfmode for sending DTMF. Default: rfc2833
                                ; Other options: 
                                ; info : SIP INFO messages
                                ; inband : Inband audio (requires 64 kbit codec -alaw, ulaw)
                                ; auto : Use rfc2833 if offered, inband otherwise
dtmfmode=rfc2833

;compactheaders = yes           ; send compact sip headers.
compactheaders=no

;videosupport=yes               ; Turn on support for SIP video. You need to turn this on
                                ; in the this section to get any video support at all.
                                ; You can turn it off on a per peer basis if the general
                                ; video support is enabled, but you can't enable it for
                                ; one peer only without enabling in the general section.
videosupport=no
;maxcallbitrate=384             ; Maximum bitrate for video calls (default 384 kb/s)
                                ; Videosupport and maxcallbitrate is settable
                                ; for peers and users as well
;callevents=no                  ; generate manager events when sip ua 
                                ; performs events (e.g. hold)
callevents=no
;alwaysauthreject = yes         ; When an incoming INVITE or REGISTER is to be rejected,
                                ; for any reason, always reject with '401 Unauthorized'
                                ; instead of letting the requester know whether there was
                                ; a matching user or peer for their request
alwaysauthreject = yes

;g726nonstandard = yes          ; If the peer negotiates G726-32 audio, use AAL2 packing
                                ; order instead of RFC3551 packing order (this is required
                                ; for Sipura and Grandstream ATAs, among others). This is
                                ; contrary to the RFC3551 specification, the peer _should_
                                ; be negotiating AAL2-G726-32 instead :-(
g726nonstandard=no

;outboundproxy=proxy.provider.domain            ; send outbound signaling to this proxy, not directly to the devices
;outboundproxy=proxy.provider.domain:8080       ; send outbound signaling to this proxy, not directly to the devices
;outboundproxy=proxy.provider.domain,force      ; Send ALL outbound signalling to proxy, ignoring route: headers
;outboundproxy=tls://proxy.provider.domain      ; same as '=proxy.provider.domain' except we try to connect with tls 
;                                               ; (could also be tcp,udp) - defining transports on the proxy line only
;                                               ; applies for the global proxy, otherwise use the transport= option
;matchexterniplocally = yes     ; Only substitute the externip or externhost setting if it matches
                                ; your localnet setting. Unless you have some sort of strange network
                                ; setup you will not need to enable this.

;dynamic_exclude_static = yes   ; Disallow all dynamic hosts from registering
                                ; as any IP address used for staticly defined
                                ; hosts.  This helps avoid the configuration
                                ; error of allowing your users to register at
                                ; the same address as a SIP provider.

;contactdeny=0.0.0.0/0.0.0.0           ; Use contactpermit and contactdeny to
;contactpermit=172.16.0.0/255.255.0.0  ; restrict at what IPs your users may
                                       ; register their phones.

; The shrinkcallerid function removes '(', ' ', ')', non-trailing '.', and '-' not
; in square brackets.  For example, the caller id value 555.5555 becomes 5555555
; when this option is enabled.  Disabling this option results in no modification
; of the caller id value, which is necessary when the caller id represents something
; that must be preserved.  This option can only be used in the [general] section.
; By default this option is on.
;
;shrinkcallerid=yes     ; on by default
shrinkcallerid=no

; If regcontext is specified, Asterisk will dynamically create and destroy a
; NoOp priority 1 extension for a given peer who registers or unregisters with
; us and have a "regexten=" configuration item.  
; Multiple contexts may be specified by separating them with '&'. The 
; actual extension is the 'regexten' parameter of the registering peer or its
; name if 'regexten' is not provided.  If more than one context is provided,
; the context must be specified within regexten by appending the desired
; context after '@'.  More than one regexten may be supplied if they are 
; separated by '&'.  Patterns may be used in regexten.
;
;regcontext=sipregistrations
;regextenonqualify=yes          ; Default "no"
                                ; If you have qualify on and the peer becomes unreachable
                                ; this setting will enforce inactivation of the regexten
                                ; extension for the peer

;--------------------------- SIP timers ----------------------------------------------------
; These timers are used primarily in INVITE transactions. 
; The default for Timer T1 is 500 ms or the measured run-trip time between
; Asterisk and the device if you have qualify=yes for the device.
;
;t1min=100                      ; Minimum roundtrip time for messages to monitored hosts
                                ; Defaults to 100 ms
t1min=250
;timert1=500                    ; Default T1 timer
                                ; Defaults to 500 ms or the measured round-trip
                                ; time to a peer (qualify=yes).
;timerb=32000                   ; Call setup timer. If a provisional response is not received
                                ; in this amount of time, the call will autocongest
                                ; Defaults to 64*timert1

;--------------------------- RTP timers ----------------------------------------------------
; These timers are currently used for both audio and video streams. The RTP timeouts
; are only applied to the audio channel.
; The settings are settable in the global section as well as per device
;
;rtptimeout=60                  ; Terminate call if 60 seconds of no RTP or RTCP activity
                                ; on the audio channel
                                ; when we're not on hold. This is to be able to hangup
                                ; a call in the case of a phone disappearing from the net,
                                ; like a powerloss or grandma tripping over a cable.
rtptimeout=30
;rtpholdtimeout=300             ; Terminate call if 300 seconds of no RTP or RTCP activity
                                ; on the audio channel
                                ; when we're on hold (must be > rtptimeout)
rtpholdtimeout=200
;rtpkeepalive=<secs>            ; Send keepalives in the RTP stream to keep NAT open
                                ; (default is off - zero)
rtpkeepalive=15

;--------------------------- SIP Session-Timers (RFC 4028)------------------------------------
; SIP Session-Timers provide an end-to-end keep-alive mechanism for active SIP sessions.
; This mechanism can detect and reclaim SIP channels that do not terminate through normal
; signaling procedures. Session-Timers can be configured globally or at a user/peer level.
; The operation of Session-Timers is driven by the following configuration parameters:
;
; * session-timers    - Session-Timers feature operates in the following three modes:
;                            originate : Request and run session-timers always
;                            accept    : Run session-timers only when requested by other UA
;                            refuse    : Do not run session timers in any case
;                       The default mode of operation is 'accept'.
; * session-expires   - Maximum session refresh interval in seconds. Defaults to 1800 secs.
; * session-minse     - Minimum session refresh interval in seconds. Defualts to 90 secs.
; * session-refresher - The session refresher (uac|uas). Defaults to 'uas'.
;
;session-timers=originate
;session-expires=600
;session-minse=90
;session-refresher=uas
;
;--------------------------- HASH TABLE SIZES ------------------------------------------------
; For maximum efficiency, adjust the following
; values to be slightly larger than the maximum number of in-memory objects (devices).
; Too large, and space is wasted. Too small, and things will run slower.
; 563 is probably way too big for small (home) applications, but it
; should cover most small/medium sites.
; It is recommended to make the sizes be a prime number!
; This was internally set to 17 for small-memory applications...
; All tables default to 563, except when compiled in LOW_MEMORY mode,
; in which case, they default to 17. You can override this by uncommenting
; the following, and changing the values.
;hash_users=563
;hash_peers=563
;hash_dialogs=563

;--------------------------- SIP DEBUGGING ---------------------------------------------------
;sipdebug = yes                 ; Turn on SIP debugging by default, from
                                ; the moment the channel loads this configuration
;recordhistory=yes              ; Record SIP history by default 
                                ; (see sip history / sip no history)
;dumphistory=yes                ; Dump SIP history at end of SIP dialogue
                                ; SIP history is output to the DEBUG logging channel


;--------------------------- STATUS NOTIFICATIONS (SUBSCRIPTIONS) ----------------------------
; You can subscribe to the status of extensions with a "hint" priority
; (See extensions.conf.sample for examples)
; chan_sip support two major formats for notifications: dialog-info and SIMPLE 
;
; You will get more detailed reports (busy etc) if you have a call limit set
; for a device. When the call limit is filled, we will indicate busy. Note that
; you need at least 2 in order to be able to do attended transfers.
;
; For queues, you will need this level of detail in status reporting, regardless
; if you use SIP subscriptions. Queues and manager use the same internal interface
; for reading status information.
;
; Note: Subscriptions does not work if you have a realtime dialplan and use the
; realtime switch.
;
allowsubscribe=yes              ; Disable support for subscriptions. (Default is yes)
subscribecontext=default        ; Set a specific context for SUBSCRIBE requests
                                ; Useful to limit subscriptions to local extensions
                                ; Settable per peer/user also
notifyringing=yes               ; Notify subscriptions on RINGING state (default: no)
notifyhold=yes                  ; Notify subscriptions on HOLD state (default: no)
                                ; Turning on notifyringing and notifyhold will add a lot
                                ; more database transactions if you are using realtime.
;callcounter = yes              ; Enable call counters on devices. This can be set per
                                ; device too.
;counteronpeer = yes            ; Apply call counting on peers only. This will improve 
                                ; status notification when you are using type=friend
                                ; Inbound calls, that really apply to the user part
                                ; of a friend will now be added to and compared with
                                ; the peer counter instead of applying two call counters,
                                ; one for the peer and one for the user.
                                ; "sip show inuse" will only show active calls on 
                                ; the peer side of a "type=friend" object if this
                                ; setting is turned on.


;----------------------------------------- T.38 FAX SUPPORT ----------------------------------
;
; This setting is available in the [general] section as well as in device configurations.
; Setting this to yes enables T.38 FAX (UDPTL) on SIP calls; it defaults to off.
; t38pt_udptl = yes            ; Enables T.38 with FEC error correction.
; t38pt_udptl = yes,fec        ; Enables T.38 with FEC error correction.
; t38pt_udptl = yes,redundancy ; Enables T.38 with redundancy error correction.
; t38pt_udptl = yes,none       ; Enables T.38 with no error correction.
t38pt_udptl = yes,fec
;
; In some cases, T.38 endpoints will provide a T38FaxMaxDatagram value (during T.38 setup) that
; is based on an incorrect interpretation of the T.38 recommendation, and results in failures
; because Asterisk does not believe it can send T.38 packets of a reasonable size to that
; endpoint (Cisco media gateways are one example of this situation). In these cases, during a
; T.38 call you will see warning messages on the console/in the logs from the Asterisk UDPTL
; stack complaining about lack of buffer space to send T.38 FAX packets. If this occurs, you
; can set an override (globally, or on a per-device basis) to make Asterisk ignore the
; T38FaxMaxDatagram value specified by the other endpoint, and use a configured value instead.
; This can be done by appending 'maxdatagram=<value>' to the t38pt_udptl configuration option,
; like this:
;
; t38pt_udptl = yes,fec,maxdatagram=400 ; Enables T.38 with FEC error correction and overrides
;                                       ; the other endpoint's provided value to assume we can
;                                       ; send 400 byte T.38 FAX packets to it.
;
; FAX detection will cause the SIP channel to jump to the 'fax' extension (if it exists)
; after T.38 is successfully negotiated.
;
; faxdetect = yes              ; Default false

;----------------------------------------- NAT SUPPORT ------------------------
; The externip, externhost and localnet settings are used if you use Asterisk
; behind a NAT device to communicate with services on the outside.

;externip = 200.201.202.203     ; Address that we're going to put in outbound SIP
                                ; messages if we're behind a NAT

                                ; The externip and localnet is used
                                ; when registering and communicating with other proxies
                                ; that we're registered with
;externhost=foo.dyndns.net      ; Alternatively you can specify an 
                                ; external host, and Asterisk will 
                                ; perform DNS queries periodically.  Not
                                ; recommended for production 
                                ; environments!  Use externip instead
;externrefresh=10               ; How often to refresh externhost if 
                                ; used
                                ; You may add multiple local networks.  A reasonable 
                                ; set of defaults are:
;localnet=192.168.0.0/255.255.0.0; All RFC 1918 addresses are local networks
;localnet=10.0.0.0/255.0.0.0    ; Also RFC1918
;localnet=172.16.0.0/12         ; Another RFC1918 with CIDR notation
;localnet=169.254.0.0/255.255.0.0 ;Zero conf local network

localnet = 192.168.0.0/16       ; All RFC 1918 addresses are local networks
localnet = 10.0.0.0/8           ;          "
localnet = 172.16.0.0/12        ;          "
localnet = 169.254.0.0/16       ; Zeroconf local network

; The nat= setting is used when Asterisk is on a public IP, communicating with
; devices hidden behind a NAT device (broadband router).  If you have one-way
; audio problems, you usually have problems with your NAT configuration or your
; firewall's support of SIP+RTP ports.  You configure Asterisk choice of RTP
; ports for incoming audio in rtp.conf
;
;nat=no                         ; Global NAT settings  (Affects all peers and users)
                                ; yes = Always ignore info and assume NAT
                                ; no = Use NAT mode only according to RFC3581 (;rport)
                                ; never = Never attempt NAT mode or RFC3581 support
                                ; route = Assume NAT, don't send rport 
                                ; (work around more UNIDEN bugs)
;nat = no
#exec /opt/gemeinschaft/etc/asterisk/sip-nat.conf.php


;----------------------------------- MEDIA HANDLING --------------------------------
; By default, Asterisk tries to re-invite the audio to an optimal path. If there's
; no reason for Asterisk to stay in the media path, the media will be redirected.
; This does not really work with in the case where Asterisk is outside and have
; clients on the inside of a NAT. In that case, you want to set canreinvite=nonat
;
;canreinvite=yes                ; Asterisk by default tries to redirect the
                                ; RTP media stream (audio) to go directly from
                                ; the caller to the callee.  Some devices do not
                                ; support this (especially if one of them is behind a NAT).
                                ; The default setting is YES. If you have all clients
                                ; behind a NAT, or for some other reason wants Asterisk to
                                ; stay in the audio path, you may want to turn this off.

                                ; In Asterisk 1.4 this setting also affect direct RTP
                                ; at call setup (a new feature in 1.4 - setting up the
                                ; call directly between the endpoints instead of sending
                                ; a re-INVITE).
;canreinvite=nonat              ; An additional option is to allow media path redirection
                                ; (reinvite) but only when the peer where the media is being
                                ; sent is known to not be behind a NAT (as the RTP core can
                                ; determine it based on the apparent IP address the media
                                ; arrives from).
;canreinvite=update             ; Yet a third option... use UPDATE for media path redirection,
                                ; instead of INVITE. This can be combined with 'nonat', as
                                ; 'canreinvite=update,nonat'. It implies 'yes'.
canreinvite = nonat

;directrtpsetup=yes             ; Enable the new experimental direct RTP setup. This sets up
                                ; the call directly with media peer-2-peer without re-invites.
                                ; Will not work for video and cases where the callee sends 
                                ; RTP payloads and fmtp headers in the 200 OK that does not match the
                                ; callers INVITE. This will also fail if canreinvite is enabled when
                                ; the device is actually behind NAT.

;ignoresdpversion=yes           ; By default, Asterisk will honor the session version
                                ; number in SDP packets and will only modify the SDP
                                ; session if the version number changes. This option will
                                ; force asterisk to ignore the SDP session version number
                                ; and treat all SDP data as new data.  This is required
                                ; for devices that send us non standard SDP packets
                                ; (observed with Microsoft OCS). By default this option is
                                ; off.

;constantssrc=yes               ; Don't change the RTP SSRC when our media stream changes

;----------------------------------------- REALTIME SUPPORT ------------------------
; For additional information on ARA, the Asterisk Realtime Architecture,
; please read realtime.txt and extconfig.txt in the /doc directory of the
; source code.
;
;rtcachefriends=yes             ; Cache realtime friends by adding them to the internal list
                                ; just like friends added from the config file only on a
                                ; as-needed basis? (yes|no)
rtcachefriends=yes  ; or else MWI does not work! -- Philipp

;rtsavesysname=no               ; Save systemname in realtime database at registration
                                ; Default= no
rtsavesysname=no
;rtupdate=yes                   ; Send registry updates to database using realtime? (yes|no)
                                ; If set to yes, when a SIP UA registers successfully, the ip address,
                                ; the origination port, the registration period, and the username of
                                ; the UA will be set to database via realtime. 
                                ; If not present, defaults to 'yes'.
rtupdate=no
;rtautoclear=yes                ; Auto-Expire friends created on the fly on the same schedule
                                ; as if it had just registered? (yes|no|<seconds>)
                                ; If set to yes, when the registration expires, the friend will
                                ; vanish from the configuration until requested again. If set
                                ; to an integer, friends expire within this number of seconds
                                ; instead of the registration interval.
;ignoreregexpire=yes            ; Enabling this setting has two functions:
                                ;
                                ; For non-realtime peers, when their registration expires, the
                                ; information will _not_ be removed from memory or the Asterisk database
                                ; if you attempt to place a call to the peer, the existing information
                                ; will be used in spite of it having expired
                                ;
                                ; For realtime peers, when the peer is retrieved from realtime storage,
                                ; the registration information will be used regardless of whether
                                ; it has expired or not; if it expires while the realtime peer 
                                ; is still in memory (due to caching or other reasons), the 
                                ; information will not be removed from realtime storage
ignoreregexpire=yes

#exec /opt/gemeinschaft/etc/asterisk/sip-reg-updates.conf.php


;----------------------------------------- SIP DOMAIN SUPPORT ------------------------
; Incoming INVITE and REFER messages can be matched against a list of 'allowed'
; domains, each of which can direct the call to a specific context if desired.
; By default, all domains are accepted and sent to the default context or the
; context associated with the user/peer placing the call.
; Domains can be specified using:
; domain=<domain>[,<context>]
; Examples:
; domain=myasterisk.dom
; domain=customer.com,customer-context
;
; In addition, all the 'default' domains associated with a server should be
; added if incoming request filtering is desired.
; autodomain=yes
;
; To disallow requests for domains not serviced by this server:
; allowexternaldomains=no

;domain=mydomain.tld,mydomain-incoming
                                ; Add domain and configure incoming context
                                ; for external calls to this domain
;domain=1.2.3.4                 ; Add IP address as local domain
                                ; You can have several "domain" settings
;allowexternalinvites=no        ; Disable INVITE and REFER to non-local domains
                                ; Default is yes
;autodomain=yes                 ; Turn this on to have Asterisk add local host
                                ; name and local IP to domain list.

; fromdomain=mydomain.tld       ; When making outbound SIP INVITEs to
                                ; non-peers, use your primary domain "identity"
                                ; for From: headers instead of just your IP
                                ; address. This is to be polite and
                                ; it may be a mandatory requirement for some
                                ; destinations which do not have a prior
                                ; account relationship with your server. 

;------------------------------ JITTER BUFFER CONFIGURATION --------------------------
; jbenable = yes              ; Enables the use of a jitterbuffer on the receiving side of a
                              ; SIP channel. Defaults to "no". An enabled jitterbuffer will
                              ; be used only if the sending side can create and the receiving
                              ; side can not accept jitter. The SIP channel can accept jitter,
                              ; thus a jitterbuffer on the receive SIP side will be used only
                              ; if it is forced and enabled.
jbenable = no
; jbforce = no                ; Forces the use of a jitterbuffer on the receive side of a SIP
                              ; channel. Defaults to "no".

; jbmaxsize = 200             ; Max length of the jitterbuffer in milliseconds.

; jbresyncthreshold = 1000    ; Jump in the frame timestamps over which the jitterbuffer is
                              ; resynchronized. Useful to improve the quality of the voice, with
                              ; big jumps in/broken timestamps, usually sent from exotic devices
                              ; and programs. Defaults to 1000.

; jbimpl = fixed              ; Jitterbuffer implementation, used on the receiving side of a SIP
                              ; channel. Two implementations are currently available - "fixed"
                              ; (with size always equals to jbmaxsize) and "adaptive" (with
                              ; variable size, actually the new jb of IAX2). Defaults to fixed.

; jblog = no                  ; Enables jitterbuffer frame logging. Defaults to "no".
;-----------------------------------------------------------------------------------

notifycid = ignore-context
qualify = yes

registerattempts = 0    ; retry forever (default 10 tries)
registertimeout = 75    ; seconds between registration attempts



;-------------------------------------------------------------------;
;  accounts for our phones                                          ;
;-------------------------------------------------------------------;

switch => Realtime


;-------------------------------------------------------------------;
;  register at a gateway                                            ;
;-------------------------------------------------------------------;

;register => gs-0001@some-gateway/gs-0001

; register at the other Gemeinschaft nodes (peers):
#exec /opt/gemeinschaft/etc/asterisk/sip-register.conf.php



;-------------------------------------------------------------------;
;  a gateway                                                        ;
;-------------------------------------------------------------------;

;[some-gateway]
;type = friend
;secret = geheim
;username = gs-0001           ; our username
;;fromuser = gs-0001          ; would override our callerids
;host = 192.168.1.109
;defaultip = 192.168.1.109
;port = 5060
;insecure = port,invite
;context = from-gg-somegw
;canreinvite = no
;call-limit = 0
;registertimeout = 75
;;t38pt_udptl = yes
;setvar=__is_from_gateway=1   ; do not change!


;-------------------------------------------------------------------;
;  other Gemeinschaft nodes                                         ;
;-------------------------------------------------------------------;

[node](!)              ; template
type = friend
port = 5060
nat = no
sendrpid = yes
trustrpid = yes
qualify = yes
insecure = port
usereqphone = no
canreinvite = yes
call-limit = 0
context = from-node
registertimeout = 55
t38pt_udptl = yes,fec
transport = udp,tcp

[node-user](!,node)    ; template
type=user

[node-peer](!,node)    ; template
canreinvite=no
type=peer

; create peers and users for the other Gemeinschaft nodes:
#exec /opt/gemeinschaft/etc/asterisk/sip-nodes.conf.php


