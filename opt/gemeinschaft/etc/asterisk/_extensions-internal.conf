; Copyright 2007, amooma GmbH, Bachstr. 126, 56566 Neuwied, Germany,
; http://www.amooma.de/;
; Stefan Wintermeyer <stefan.wintermeyer@amooma.de>,
; Philipp Kempgen <philipp.kempgen@amooma.de>
; 
; This program is free software; you can redistribute it and/or
; modify it under the terms of the GNU General Public License
; as published by the Free Software Foundation; either version 2
; of the License, or (at your option) any later version.
; 
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
; MA 02110-1301, USA.


#include "extensions-hints.conf"


exten => _ZXXX,1,ExecIf($["${forwards}" = ""],Set,__forwards=-1)
exten => _ZXXX,n,GotoIf($["${forwards}" = "${max_forwards}"]?max_forwards)
exten => _ZXXX,n,Set(__forwards=${MATH(${forwards}+1,int)})
;exten => _ZXXX,n,Set(DYNAMIC_FEATURES=)
exten => _ZXXX,n,ExecIf($["${origext}" = ""],Set,__origext=${EXTEN})

; get CLIR for a call to internal:
exten => _ZXXX,n,AGI(/opt/ast/dialplan-scripts/in-get-clir-internal.agi|${user_id})
exten => _ZXXX,n,ExecIf($["${clir}" = "1"],Set,CALLERID(all)=Anonym <0>)

; check the type of the called extension:
exten => _ZXXX,n,AGI(/opt/ast/dialplan-scripts/in-get-type.agi|${EXTEN})
exten => _ZXXX,n,Verbose(1,### Incoming call to ${EXTEN}\, type: ${exttype}\, forwards: ${forwards})
exten => _ZXXX,n,Goto(to_${exttype})

; is it a user?
; is it a call group?
; is it a queue?
; ...

;----------------------------------------------------------------------
; type is "user":
;
exten => _ZXXX,2000(to_user),NoOp()
exten => _ZXXX,n,AGI(/opt/ast/dialplan-scripts/in-user-get-fw.agi|${EXTEN})

; forward (case=always) active?
exten => _ZXXX,n,GotoIf($["${fw_always}" != ""]?user_fw_always)

; call the user
;
exten => _ZXXX,n,Set(dialtimeout=15)
exten => _ZXXX,n,ExecIf($["${fw_unavail}" != ""],Set,dialtimeout=${fw_unavail_timeout})
exten => _ZXXX,n,AGI(/opt/ast/dialplan-scripts/in-user-pgrpdialstr.agi|${EXTEN})
; get ringer .....
exten => _ZXXX,n,AGI(/opt/ast/dialplan-scripts/in-user-get-ringer.agi|${EXTEN})
exten => _ZXXX,n,ExecIf($["${ringer}" != ""],SIPAddHeader,Alert-Info: <http://192.168.1.110:82/ringtones/${ringer}>)
exten => _ZXXX,n,Dial(SIP/${EXTEN}${pgrpdialstr},${dialtimeout})
exten => _ZXXX,n,GotoIf($["${DIALSTATUS}" = "BUSY"]?user_busy)
exten => _ZXXX,n,GotoIf($["${DIALSTATUS}" = "NOANSWER"]?user_unavail)
exten => _ZXXX,n,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?user_offline)
exten => _ZXXX,n,GotoIf($["${DIALSTATUS}" = "CONGESTION"]?user_offline)
exten => _ZXXX,n,Hangup()

; user busy
;
exten => _ZXXX,2200(user_busy),Verbose(1,### Called user: ${EXTEN} is busy)
; forward on busy?
exten => _ZXXX,n,GotoIf($["${fw_busy}" != ""]?user_fw_busy)
exten => _ZXXX,n,Goto(user_uncallable)

; user offline
;
exten => _ZXXX,2400(user_offline),Verbose(1,### Called user: ${EXTEN} is offline)
; forward on offline?
exten => _ZXXX,n,GotoIf($["${fw_offline}" != ""]?user_fw_offline)
exten => _ZXXX,n,Goto(user_uncallable)

; user unavail
;
exten => _ZXXX,2600(user_unavail),Verbose(1,### Called user: ${EXTEN} does not answer)
; forward on unavail?
exten => _ZXXX,n,GotoIf($["${fw_unavail}" != ""]?user_fw_unavail)
exten => _ZXXX,n,Goto(user_uncallable)


; user, forward always
;
exten => _ZXXX,3000(user_fw_always),Verbose(1,### Called user: ${EXTEN}\, always forward to: ${fw_always})
exten => _ZXXX,n,Dial(Local/${fw_always},200)
exten => _ZXXX,n,Hangup()

; user, forward on busy
;
exten => _ZXXX,3200(user_fw_busy),Verbose(1,### Called user: ${EXTEN}\, forward on busy to: ${fw_busy})
exten => _ZXXX,n,Dial(Local/${fw_busy},200)
exten => _ZXXX,n,Hangup()

; user, forward on offline
;
exten => _ZXXX,3400(user_fw_offline),Verbose(1,### Called user: ${EXTEN}\, forward on offline to: ${fw_offline})
exten => _ZXXX,n,Dial(Local/${fw_offline},200)
exten => _ZXXX,n,Hangup()

; user, forward on unavail (no answer)
;
exten => _ZXXX,3600(user_fw_unavail),Verbose(1,### Called user: ${EXTEN}\, forward on unavail to: ${fw_unavail})
exten => _ZXXX,n,Dial(Local/${fw_unavail},200)
exten => _ZXXX,n,Hangup()


; user uncallable (busy/offline/unavail)
;
exten => _ZXXX,3800(user_uncallable),NoOp()
; vm box active (from internal/external)?
exten => _ZXXX,n,AGI(/opt/ast/dialplan-scripts/in-user-get-vm.agi|${origext})
exten => _ZXXX,n,GotoIf($["${user_id}" != ""]?vm_from_internal)
exten => _ZXXX,n,Goto(vm_from_external)

; vm from internal
;
exten => _ZXXX,4000(vm_from_internal),NoOp()
exten => _ZXXX,n,GotoIf($["${vm_internal_active}" != "1"]?user_uncallable2)
exten => _ZXXX,n,Verbose(1,### Called user: ${EXTEN} unreachable\, record voicemail from internal)
exten => _ZXXX,n,Set(vm_source=internal)
exten => _ZXXX,n,Goto(user_vm)

; vm from external
;
exten => _ZXXX,4200(vm_from_external),NoOp()
exten => _ZXXX,n,GotoIf($["${vm_external_active}" != "1"]?user_uncallable2)
exten => _ZXXX,n,Verbose(1,### Called user: ${EXTEN} unreachable\, record voicemail from external)
exten => _ZXXX,n,Verbose(1,### Record message for original user: ${origext})
exten => _ZXXX,n,Set(vm_source=external)
exten => _ZXXX,n,Goto(user_vm)

; vm
;
exten => _ZXXX,4400(user_vm),Answer()
exten => _ZXXX,n,Wait(1)
exten => _ZXXX,n,Set(vm_announce_file=${vm_announce_${vm_source}})
exten => _ZXXX,n,GotoIf($["${vm_announce_file}" = ""]?user_vm_nocustom_ann)
exten => _ZXXX,n,Playback(${vm_announce_file})
exten => _ZXXX,n,Goto(user_vm_rec)

exten => _ZXXX,n(user_vm_nocustom_ann),Playback(vm-theperson)
exten => _ZXXX,n,SayDigits(${origext})
exten => _ZXXX,n,Playback(vm-isunavail)
exten => _ZXXX,n,Playback(vm-intro)

exten => _ZXXX,n(user_vm_rec),VoiceMail(${origext},s)
exten => _ZXXX,n,Hangup()

; user uncallable2
;
exten => _ZXXX,4600(user_uncallable2),Verbose(1,### Called user: ${EXTEN} unreachable\, mailbox not active)
; -> Callgroup / Queue / Hangup
exten => _ZXXX,n,Hangup()



;----------------------------------------------------------------------
; type is unknown, send it to the gateway:
;
exten => _ZXXX,9000(to_unknown),Macro(dial-gateway,${EXTEN})
exten => _ZXXX,n,Hangup()

;----------------------------------------------------------------------
; the AGI script failed:
;
exten => _ZXXX,9200(to_),Verbose(1,### The AGI script returned an empty type!)
exten => _ZXXX,n,Hangup()

;----------------------------------------------------------------------
; maximum number of call forwards:
;
exten => _ZXXX,9400(max_forwards),Verbose(1,### Maximum number of call forwards (${max_forwards}))
;exten => _ZXXX,n,Congestion()
;exten => _ZXXX,n,Hangup()
exten => _ZXXX,n,Goto(user_uncallable)





;----------------------------------------------------------------------
; Pickup
;----------------------------------------------------------------------

exten => _*8.,1,GotoIf($["${PICKUPMARK}" = ""]?pickup)
exten => _*8.,200(pickup),Pickup(${EXTEN:2}@PICKUPMARK)


